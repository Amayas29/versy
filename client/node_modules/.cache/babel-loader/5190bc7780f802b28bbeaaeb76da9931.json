{"ast":null,"code":"import _defineProperty from \"/home/amayas/Projects/versy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/amayas/Projects/versy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/amayas/Projects/versy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport validation from \"./SignupFormValidation\";\n\nvar useSignupForm = function useSignupForm(submitForm) {\n  var _useState = useState({\n    fullname: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataIsCorrect = _useState6[0],\n      setDataIsCorrect = _useState6[1];\n\n  var handleChange = function handleChange(event) {\n    setValues(_objectSpread({}, values, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    setErrors(validation(values));\n    setDataIsCorrect(true);\n  };\n\n  useEffect(function () {\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\n      submitForm(true);\n    }\n  }, [errors]);\n  return {\n    handleChange: handleChange,\n    handleFormSubmit: handleFormSubmit,\n    errors: errors,\n    values: values\n  };\n};\n\nexport default useSignupForm;","map":{"version":3,"sources":["/home/amayas/Projects/versy/src/components/authentification/useSignupForm.js"],"names":["useState","useEffect","validation","useSignupForm","submitForm","fullname","email","password","values","setValues","errors","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","event","target","name","value","handleFormSubmit","preventDefault","Object","keys","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AAAA,kBAENJ,QAAQ,CAAC;AACjCK,IAAAA,QAAQ,EAAC,EADwB;AAEjCC,IAAAA,KAAK,EAAC,EAF2B;AAGjCC,IAAAA,QAAQ,EAAC;AAHwB,GAAD,CAFF;AAAA;AAAA,MAE3BC,MAF2B;AAAA,MAEnBC,SAFmB;;AAAA,mBAQNT,QAAQ,CAAC,EAAD,CARF;AAAA;AAAA,MAQ3BU,MAR2B;AAAA,MAQnBC,SARmB;;AAAA,mBASQX,QAAQ,CAAC,KAAD,CAThB;AAAA;AAAA,MAS3BY,aAT2B;AAAA,MASZC,gBATY;;AAWlC,MAAMC,YAAY,GAAE,SAAdA,YAAc,CAACC,KAAD,EAAW;AAC3BN,IAAAA,SAAS,mBACFD,MADE,sBAEJO,KAAK,CAACC,MAAN,CAAaC,IAFT,EAEgBF,KAAK,CAACC,MAAN,CAAaE,KAF7B,GAAT;AAIH,GALD;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,KAAD,EAAW;AAChCA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,SAAS,CAACT,UAAU,CAACM,MAAD,CAAX,CAAT;AACAK,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGoB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,aAAvC,EAAqD;AACjDR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GAJQ,EAIN,CAACM,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAY,EAAZA,YAAD;AAAeK,IAAAA,gBAAgB,EAAhBA,gBAAf;AAAiCT,IAAAA,MAAM,EAANA,MAAjC;AAAyCF,IAAAA,MAAM,EAANA;AAAzC,GAAP;AACH,CA/BD;;AAiCA,eAAeL,aAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport validation from \"./SignupFormValidation\";\n\nconst useSignupForm = (submitForm) => {\n\n    const [values, setValues] = useState({\n        fullname:\"\",\n        email:\"\",\n        password:\"\",\n    });\n\n    const [errors, setErrors] = useState({});    \n    const [dataIsCorrect, setDataIsCorrect] = useState(false);\n\n    const handleChange= (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        setErrors(validation(values));\n        setDataIsCorrect(true);\n    };\n\n    useEffect(() => {\n        if(Object.keys(errors).length === 0 && dataIsCorrect){\n            submitForm(true);\n        }\n    }, [errors]);\n\n    return {handleChange, handleFormSubmit, errors, values};\n}\n\nexport default useSignupForm;"]},"metadata":{},"sourceType":"module"}