{"ast":null,"code":"var validateEmail = function validateEmail(email) {\n  email = String(email).toLowerCase().trim();\n  if (!email) return {\n    status: false,\n    message: \"Email is required.\"\n  };\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (re.test(email)) return {\n    status: true,\n    message: \"\"\n  };\n  return {\n    status: false,\n    message: \"Email is invalid.\"\n  };\n};\n\nvar validatePassword = function validatePassword(password) {\n  password = String(password);\n  var uppercaseRegExp = /(?=.*?[A-Z])/;\n  var lowercaseRegExp = /(?=.*?[a-z])/;\n  var digitsRegExp = /(?=.*?[0-9])/;\n  var specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n  var minLengthRegExp = /(.{8,})/;\n  if (!password) return {\n    status: false,\n    message: \"Password is required.\"\n  };\n  if (!minLengthRegExp.test(password)) return {\n    status: false,\n    message: \"Password must have more than seven characters.\"\n  };\n  if (!uppercaseRegExp.test(password)) return {\n    status: false,\n    message: \"Password must have at least one upperCase\"\n  };\n  if (!lowercaseRegExp.test(password)) return {\n    status: false,\n    message: \"Password must have at least one lowerrCase\"\n  };\n  if (!digitsRegExp.test(password)) return {\n    status: false,\n    message: \"Password must have at least one digit\"\n  };\n  if (!specialCharRegExp.test(password)) return {\n    status: false,\n    message: \"Password must have at least one special\"\n  };\n  return {\n    status: true,\n    message: \"\"\n  };\n};\n\nvar validatePasswordConfirmation = function validatePasswordConfirmation(password, passwordConfirmation) {\n  if (!passwordConfirmation) return {\n    status: false,\n    message: \"password confirmation is required.\"\n  };\n  if (passwordConfirmation !== password) return {\n    status: false,\n    message: \"password confirmation is not matched.\"\n  };\n  return {\n    status: true,\n    message: \"\"\n  };\n};\n\nexport default {\n  validateEmail: validateEmail,\n  validatePassword: validatePassword,\n  validatePasswordConfirmation: validatePasswordConfirmation\n};","map":{"version":3,"sources":["/home/amayas/Projects/versy/src/utils/Validations.js"],"names":["validateEmail","email","String","toLowerCase","trim","status","message","re","test","validatePassword","password","uppercaseRegExp","lowercaseRegExp","digitsRegExp","specialCharRegExp","minLengthRegExp","validatePasswordConfirmation","passwordConfirmation"],"mappings":"AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BA,EAAAA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAN,CACLE,WADK,GAELC,IAFK,EAAR;AAIA,MAAI,CAACH,KAAL,EAAY,OAAO;AAAEI,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AAEZ,MAAMC,EAAE,GAAG,yJAAX;AACA,MAAIA,EAAE,CAACC,IAAH,CAAQP,KAAR,CAAJ,EAAoB,OAAO;AAAEI,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AAEpB,SAAO;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AACD,CAXD;;AAaA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrCA,EAAAA,QAAQ,GAAGR,MAAM,CAACQ,QAAD,CAAjB;AAEA,MAAMC,eAAe,GAAG,cAAxB;AACA,MAAMC,eAAe,GAAG,cAAxB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,iBAAiB,GAAG,qBAA1B;AACA,MAAMC,eAAe,GAAG,SAAxB;AAEA,MAAI,CAACL,QAAL,EAAe,OAAO;AAAEL,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AAEf,MAAI,CAACS,eAAe,CAACP,IAAhB,CAAqBE,QAArB,CAAL,EACE,OAAO;AACLL,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAKF,MAAI,CAACK,eAAe,CAACH,IAAhB,CAAqBE,QAArB,CAAL,EACE,OAAO;AACLL,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAKF,MAAI,CAACM,eAAe,CAACJ,IAAhB,CAAqBE,QAArB,CAAL,EACE,OAAO;AACLL,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAKF,MAAI,CAACO,YAAY,CAACL,IAAb,CAAkBE,QAAlB,CAAL,EACE,OAAO;AAAEL,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AAEF,MAAI,CAACQ,iBAAiB,CAACN,IAAlB,CAAuBE,QAAvB,CAAL,EACE,OAAO;AACLL,IAAAA,MAAM,EAAE,KADH;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAKF,SAAO;AAAED,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AACD,CAvCD;;AAyCA,IAAMU,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACN,QAAD,EAAWO,oBAAX,EAAoC;AACvE,MAAI,CAACA,oBAAL,EACE,OAAO;AAAEZ,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AAEF,MAAIW,oBAAoB,KAAKP,QAA7B,EACE,OAAO;AAAEL,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AACF,SAAO;AAAED,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AACD,CAPD;;AASA,eAAe;AACbN,EAAAA,aAAa,EAAbA,aADa;AAEbS,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbO,EAAAA,4BAA4B,EAA5BA;AAHa,CAAf","sourcesContent":["const validateEmail = (email) => {\n  email = String(email)\n    .toLowerCase()\n    .trim();\n\n  if (!email) return { status: false, message: \"Email is required.\" };\n\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (re.test(email)) return { status: true, message: \"\" };\n\n  return { status: false, message: \"Email is invalid.\" };\n};\n\nconst validatePassword = (password) => {\n  password = String(password);\n\n  const uppercaseRegExp = /(?=.*?[A-Z])/;\n  const lowercaseRegExp = /(?=.*?[a-z])/;\n  const digitsRegExp = /(?=.*?[0-9])/;\n  const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n  const minLengthRegExp = /(.{8,})/;\n\n  if (!password) return { status: false, message: \"Password is required.\" };\n\n  if (!minLengthRegExp.test(password))\n    return {\n      status: false,\n      message: \"Password must have more than seven characters.\",\n    };\n\n  if (!uppercaseRegExp.test(password))\n    return {\n      status: false,\n      message: \"Password must have at least one upperCase\",\n    };\n\n  if (!lowercaseRegExp.test(password))\n    return {\n      status: false,\n      message: \"Password must have at least one lowerrCase\",\n    };\n\n  if (!digitsRegExp.test(password))\n    return { status: false, message: \"Password must have at least one digit\" };\n\n  if (!specialCharRegExp.test(password))\n    return {\n      status: false,\n      message: \"Password must have at least one special\",\n    };\n\n  return { status: true, message: \"\" };\n};\n\nconst validatePasswordConfirmation = (password, passwordConfirmation) => {\n  if (!passwordConfirmation)\n    return { status: false, message: \"password confirmation is required.\" };\n\n  if (passwordConfirmation !== password)\n    return { status: false, message: \"password confirmation is not matched.\" };\n  return { status: true, message: \"\" };\n};\n\nexport default {\n  validateEmail,\n  validatePassword,\n  validatePasswordConfirmation,\n};\n"]},"metadata":{},"sourceType":"module"}